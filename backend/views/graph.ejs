<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />
  </head>
  <title>Add Patient</title>

  <link
    href="/public/static/vendor/fontawesome-free/css/all.min.css"
    rel="stylesheet"
    type="text/css"
  />

  <link href="/public/static/css/addPatient.css" rel="stylesheet">
  <link
    href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
    rel="stylesheet"
  />

  <!-- Custom styles for this template-->
  <link href="/public/static/css/sb-admin-2.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.0/axios.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
  <body class="bg-gradient-white text-dark, page-top">
    <div id="google_translate_element"></div>
    <script type="text/javascript">
      function googleTranslateElementInit() {
        new google.translate.TranslateElement(
          {
            pageLanguage: "en",
            layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
          },
          "google_translate_element"
        );
      }
    </script>

        <%- include('../views/partials/red1.ejs');%>

        <form action="form_action.asp" method="get" name="myForm">
            Patient ID:  <br>
            Last name: <br>

          </form>
          <br>

        <div class="card-body">
        <div
        class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">Fetal Heart Rate</h6>
    </div>
   <br>
        
        <canvas id="foetalChart" style="width:100%;max-width:600px"></canvas>
    </div>
    
<br>
<div class="card-body">
<div
class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
<h6 class="m-0 font-weight-bold text-primary">Cervix Dilation And Descent</h6>
</div>
<br>
 <canvas id="cervixDilationChart" style="width:100%;max-width:600px"></canvas>
</div>


        <br>
        
        <div class="card-body">
            <div
            class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Contraction Details</h6>
            </div>
            <br>
<canvas id="contractionChart" style="width:100%;max-width:600px"></canvas>
        </div>

<br>
<div class="card-body">
    <div
    class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
    <h6 class="m-0 font-weight-bold text-primary">Vital Signs</h6>
    </div>
    <br>
<canvas id="VitalChart" style="width:100%;max-width:600px"></canvas>
</div>
<br>
      
      <script>

            

             function getData(patientId) {
                return {
    "risks": [
        "Foetal heart rate is low",
        "Miconium detected",
        "Low rate of cervical dilation"
    ],
    "suggestions": [
        "Transfuse fluid",
        "Oxygen Supplementation",
        "If no positive response observed refer urgently to referral unit",
        "Take care of infection in baby after birth",
        "Call doctor immediately"
    ],
    "patient": {
        "_id": "637e4717d32169ddae592f1d",
        "name": "Anirudh",
        "age": 20,
        "parity": 3,
        "alive": 3,
        "edd": "2022-11-23T16:04:57.328Z",
        "sb": 2,
        "nnd": 2,
        "riskFactors": "whatevenr",
        "contractionStartTime": "2022-11-23T17:04:57.328Z",
        "membraneRuptureTime": "2022-11-23T20:04:57.328Z",
        "personResponsible": "6375d2de9b545b3f064f4314",
        "foetalHeartRate": [
            {
                "_id": "637eb3940bddddbf136bc2fb",
                "measurementName": "foetalHeartRate",
                "value": "1",
                "recordedBy": "6375d2de9b545b3f064f4314",
                "timestamp": "2022-11-23T23:58:12.610Z",
                "__v": 0
            }
        ],
        "liquor": [
            {
                "_id": "637e7867d0766b2a36b5140d",
                "measurementName": "liquor",
                "value": "M",
                "recordedBy": "6375d2de9b545b3f064f4314",
                "timestamp": "2022-11-23T19:45:43.392Z",
                "__v": 0
            },
            {
                "_id": "637e786ad0766b2a36b51412",
                "measurementName": "liquor",
                "value": "M",
                "recordedBy": "6375d2de9b545b3f064f4314",
                "timestamp": "2022-11-23T19:45:46.725Z",
                "__v": 0
            }
        ],
        "moulding": [],
        "cervix": [
            {
                "_id": "637e8e6197db0031bb6e2580",
                "measurementName": "cervix",
                "value": "5",
                "recordedBy": "6375d2de9b545b3f064f4314",
                "timestamp": "2022-11-23T21:19:29.546Z",
                "__v": 0
            },
            {
                "_id": "637e8e6797db0031bb6e258a",
                "measurementName": "cervix",
                "value": "5",
                "recordedBy": "6375d2de9b545b3f064f4314",
                "timestamp": "2022-11-23T21:19:35.764Z",
                "__v": 0
            },
            {
                "_id": "637e8e6997db0031bb6e2594",
                "measurementName": "cervix",
                "value": "5",
                "recordedBy": "6375d2de9b545b3f064f4314",
                "timestamp": "2022-11-23T21:19:37.474Z",
                "__v": 0
            }
        ],
        "descent": [],
        "contraction": [],
        "pulse": [],
        "bp": [],
        "temperature": [],
        "urine": [
            {
                "volume": 10,
                "albumin": 20,
                "glucose": 30,
                "recordedBy": "6375d2de9b545b3f064f4314",
                "_id": "637e7c3c6769eecaccd62939"
            },
            {
                "volume": 10,
                "albumin": 20,
                "glucose": 30,
                "recordedBy": "6375d2de9b545b3f064f4314",
                "_id": "637e7c416769eecaccd6293e"
            },
            {
                "volume": 10,
                "albumin": 20,
                "glucose": 30,
                "recordedBy": "6375d2de9b545b3f064f4314",
                "_id": "637e7c496769eecaccd62944"
            },
            {
                "volume": 10,
                "albumin": 20,
                "glucose": 30,
                "recordedBy": "6375d2de9b545b3f064f4314",
                "_id": "637e85487ffa15077c6a2cbf"
            },
            {
                "volume": 10,
                "albumin": 20,
                "glucose": 30,
                "recordedBy": "6375d2de9b545b3f064f4314",
                "_id": "637e855e335273b7ac158759"
            }
        ],
        "patientId": 3,
        "__v": 18,
        "diastolic": [],
        "status": "active",
        "systolic": []
    }
}
            }

        </script>

        <script>
            const data = getData(1);
            console.log(data)
            var patientId= data.patient._id;
            var patientName= data.patient.name;
            var dilationValues = [];
            var dilationTimestamp = data.patient.cervix.map((element)=> element.timestamp)
            var dilationValue = data.patient.cervix.map((element)=> element.value)
            var descentValue = data.patient.cervix.map((element)=> element.descent)
           

new Chart("cervixDilationChart", {
  type: "line",
  data: {
    labels: dilationTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: dilationValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 0, max:10}}],
    }
  }
},
{
  type: "line",
  data: {
    labels: dilationTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: descentValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 0, max:10}}],
    }
  }
},
);


            var FetalTimestamp = data.patient.foetalHeartRate.map((element)=> element.timestamp)
            var FoetalValue = data.patient.foetalHeartRate.map((element)=> element.value)
            console.log(dilationValue)

new Chart("foetalChart", {
  type: "line",
  data: {
    labels: dilationTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: dilationValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 70, max:190}}],
    }
  }
});

var contractionTimestamp = data.patient.foetalHeartRate.map((element)=> element.timestamp)
 var contractionValue = data.patient.contraction.map((element)=> element.value)
          

if(contractionValue<2)
{
var barColor= "red";
}
else if(contractionValue>=2 && contractionValue <=4)
{
    var barColor= "green";
}
else{
    var barColor= "blue";
}
new Chart("contractionChart", {
  type: "bar",
  data: {
    labels: contractionTimestamp,
    datasets: [{
      backgroundColor: barColor,
      data: contractionValue
    }]
  },
  options: {
    legend: {display: false},
    title: {
      display: true,
      text: "Contractions per 10 Minutes"
    },
    scales: {
      yAxes: [{ticks: {min: 1, max:5}}],
    }
  }
});


var FetalTimestamp = data.patient.foetalHeartRate.map((element)=> element.timestamp)
var temperatureValue = data.patient.temperature.map((element)=> element.temperature)
var BpValue = data.patient.bp.map((element)=> element.bp)
var pulseValue = data.patient.pulse.map((element)=> element.pulse)
                   
new Chart("VitalChart", {
  type: "line",
  data: {
    labels: FetalTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: temperatureValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
        yAxes: [{ticks: {min: 50, max:220}}],
    }
  }
},
{
  type: "line",
  data: {
    labels: FetalTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: BpValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
        yAxes: [{ticks: {min: 50, max:220}}],
    }
  }
},
{
  type: "line",
  data: {
    labels: FetalTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: pulseValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 50, max:220}}],
    }
  }
}
);
        </script>

        <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script> 
    </body>


</html>
