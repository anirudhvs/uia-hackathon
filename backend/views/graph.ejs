<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />
  </head>
  <title>Add Patient</title>

  <link
    href="/public/static/vendor/fontawesome-free/css/all.min.css"
    rel="stylesheet"
    type="text/css"
  />

  <link href="/public/static/css/addPatient.css" rel="stylesheet">
  <link
    href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
    rel="stylesheet"
  />

  <!-- Custom styles for this template-->
  <link href="/public/static/css/sb-admin-2.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.0/axios.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
  <body class="bg-gradient-white text-dark, page-top">
    <div id="google_translate_element"></div>
    <script type="text/javascript">
      function googleTranslateElementInit() {
        new google.translate.TranslateElement(
          {
            pageLanguage: "en",
            layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
          },
          "google_translate_element"
        );
      }
    </script>

        <%- include('../views/partials/red1.ejs');%>

        <form action="form_action.asp" method="get" name="myForm">
            Patient ID: <%= patient._id %>  <br>
            Last name: <%= patient.name %>  <br>
          </form>
          <br>
          
        <div class="card-body">
        <div
        class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">Fetal Heart Rate</h6>
    </div>
   <br>
        
        <canvas id="foetalChart" style="width:100%;max-width:600px"></canvas>
    </div>
    
<br>
<div class="card-body">
<div
class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
<h6 class="m-0 font-weight-bold text-primary">Cervix Dilation And Descent</h6>
</div>
<br>
 <canvas id="cervixDilationChart" style="width:100%;max-width:600px"></canvas>
</div>


        <br>
        
        <div class="card-body">
            <div
            class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Contraction Details</h6>
            </div>
            <br>
<canvas id="contractionChart" style="width:100%;max-width:600px"></canvas>
        </div>

<br>
<div class="card-body">
    <div
    class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
    <h6 class="m-0 font-weight-bold text-primary">Vital Signs</h6>
    </div>
    <br>
<canvas id="VitalChart" style="width:100%;max-width:600px"></canvas>
</div>
<br>
      
      <script>

            

             function getData(patientId) {
              return <%- JSON.stringify(patient) %>;
             }
        </script>

        <script>
            const data = {
              "patient":getData(1)
            };
            console.log(data)
            var patientId= data.patient._id;
            var patientName= data.patient.name;
            var dilationValues = [];
            var dilationTimestamp = data.patient.cervix.map((element)=> element.timestamp)
            var dilationValue = data.patient.cervix.map((element)=> element.value)
            var descentValue = data.patient.cervix.map((element)=> element.descent)
           

new Chart("cervixDilationChart", {
  type: "line",
  data: {
    labels: dilationTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: dilationValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 0, max:10}}],
    }
  }
},
{
  type: "line",
  data: {
    labels: dilationTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: descentValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 0, max:10}}],
    }
  }
},
);


            var FetalTimestamp = data.patient.foetalHeartRate.map((element)=> element.timestamp)
            var FoetalValue = data.patient.foetalHeartRate.map((element)=> element.value)
            console.log(dilationValue)

new Chart("foetalChart", {
  type: "line",
  data: {
    labels: FetalTimestamp,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: FoetalValue
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 70, max:190}}],
    }
  }
});

var contractionTimestamp = data.patient.foetalHeartRate.map((element)=> element.timestamp)
 var contractionValue = data.patient.contraction.map((element)=> element.value)
          

if(contractionValue<2)
{
var barColor= "red";
}
else if(contractionValue>=2 && contractionValue <=4)
{
    var barColor= "green";
}
else{
    var barColor= "blue";
}
new Chart("contractionChart", {
  type: "bar",
  data: {
    labels: contractionTimestamp,
    datasets: [{
      backgroundColor: barColor,
      data: contractionValue
    }]
  },
  options: {
    legend: {display: false},
    title: {
      display: true,
      text: "Contractions per 10 Minutes"
    },
    scales: {
      yAxes: [{ticks: {min: 1, max:5}}],
    }
  }
});


var systolicTimestamp = data.patient.systolic.map((element)=> element.timestamp)
var diastolicTimestamp = data.patient.diastolic.map((element)=> element.timestamp)
var systolicValues = data.patient.systolic.map((element)=> element.value)
var diastolicValues = data.patient.diastolic.map((element)=> element.value)

var BpValue = data.patient.bp.map((element)=> element.bp)
var pulseValue = data.patient.pulse.map((element)=> element.pulse)

// const data = {
//   labels: labels,
//   datasets: [
//     {
//       label: 'Dataset 1',
//       data: Utils.numbers(NUMBER_CFG),
//       borderColor: Utils.CHART_COLORS.red,
//       backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),
//       yAxisID: 'y',
//     },
//     {
//       label: 'Dataset 2',
//       data: Utils.numbers(NUMBER_CFG),
//       borderColor: Utils.CHART_COLORS.blue,
//       backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),
//       yAxisID: 'y1',
//     }
//   ]
// };
// const vitalData= {
//     labels: FetalTimestamp,
//     datasets: [
//       {
//       label: "Systolic",
//       fill: false,
//       lineTension: 0,
//       backgroundColor: "rgba(0,0,255,1.0)",
//       borderColor: "rgba(0,0,255,0.1)",
//       data: systolicValues
//     },
//     {
//       label: "Diastolic",
//       fill: false,
//       lineTension: 0,
//       backgroundColor: "green",
//       borderColor: "green",
//       data: diastolicValues

//     }
//   ]
//   }
// new Chart("VitalChart", {
//   type: 'line',
//   data: vitalData,
//   options: {
//     responsive: true,
//     interaction: {
//       mode: 'index',
//       intersect: false,
//     },
//     stacked: false,
//     plugins: {
//       title: {
//         display: true,
//         text: 'Chart.js Line Chart - Multi Axis'
//       }
//     },
//     scales: {
//       y: {
//         type: 'linear',
//         display: true,
//         position: 'left',
//       },
//       y1: {
//         type: 'linear',
//         display: true,
//         position: 'right',

//         // grid line settings
//         grid: {
//           drawOnChartArea: false, // only want the grid lines for one axis to show up
//         },
//       },
//     }
//   },
// });
        </script>

        <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script> 
    </body>


</html>
